{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/notes/action/create/CreateNote.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"container\": \"CreateNote-module__aVly8a__container\",\n  \"main\": \"CreateNote-module__aVly8a__main\",\n  \"title\": \"CreateNote-module__aVly8a__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///C:/GoIT/Projects/dz/next/next-module-3-4/lib/api.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport type { Note, NoteTag } from \"../types/note\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: \"https://notehub-public.goit.study/api\",\r\n});\r\n\r\napiClient.interceptors.request.use((config) => {\r\n  const token = process.env.NEXT_PUBLIC_NOTEHUB_TOKEN;\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport interface FetchNotesResponse {\r\n  notes: Note[];\r\n\r\n  totalPages: number;\r\n}\r\n\r\ninterface FetchNotesParams {\r\n  page?: number;\r\n  search?: string;\r\n  perPage?: number;\r\n}\r\n\r\nexport interface NewNotePayload {\r\n  title: string;\r\n  content: string;\r\n  tag: string;\r\n}\r\nexport async function fetchNotes(\r\n  page = 1,\r\n  perPage = 12,\r\n  search = \"\",\r\n  tag?: NoteTag\r\n): Promise<FetchNotesResponse> {\r\n  const response = await apiClient.get<FetchNotesResponse>(\"/notes\", {\r\n    params: { page, perPage, search, tag },\r\n  });\r\n  return response.data;\r\n}\r\n\r\nexport const createNote = async (noteData: NewNotePayload): Promise<Note> => {\r\n  const response = await apiClient.post<Note>(\"/notes\", noteData);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteNote = async (noteId: string): Promise<Note> => {\r\n  if (!noteId) {\r\n    throw new Error(\"Note ID is required for deletion\");\r\n  }\r\n  const response = await apiClient.delete<Note>(`/notes/${noteId}`);\r\n  return response.data;\r\n};\r\nexport const fetchNoteById = async (id: string): Promise<Note> => {\r\n  if (!id) {\r\n    throw new Error(\"Note ID is required\");\r\n  }\r\n  const response = await apiClient.get<Note>(`/notes/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getSingleNote = fetchNoteById;\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AAGA,MAAM,YAAY,gJAAK,CAAC,MAAM,CAAC;IAC7B,SAAS;AACX;AAEA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAClC,MAAM;IACN,wCAAW;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT;AAmBO,eAAe,WACpB,OAAO,CAAC,EACR,UAAU,EAAE,EACZ,SAAS,EAAE,EACX,GAAa;IAEb,MAAM,WAAW,MAAM,UAAU,GAAG,CAAqB,UAAU;QACjE,QAAQ;YAAE;YAAM;YAAS;YAAQ;QAAI;IACvC;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,UAAU,IAAI,CAAO,UAAU;IACtD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO;IAC/B,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,WAAW,MAAM,UAAU,MAAM,CAAO,CAAC,OAAO,EAAE,QAAQ;IAChE,OAAO,SAAS,IAAI;AACtB;AACO,MAAM,gBAAgB,OAAO;IAClC,IAAI,CAAC,IAAI;QACP,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAO,CAAC,OAAO,EAAE,IAAI;IACzD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,gBAAgB","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///C:/GoIT/Projects/dz/next/next-module-3-4/lib/stores/noteStore.ts"],"sourcesContent":["import { create } from \"zustand\";\r\nimport { NewNotePayload } from \"../api\";\r\n\r\ntype NoteDraftStore = {\r\n  draft: NewNotePayload;\r\n  setDraft: (note: NewNotePayload) => void;\r\n  clearDraft: () => void;\r\n};\r\n\r\nconst initialDraft: NewNotePayload = {\r\n  title: \"\",\r\n  content: \"\",\r\n  tag: \"Todo\",\r\n};\r\n\r\nexport const useNoteDraftStore = create<NoteDraftStore>()((set) => ({\r\n  draft: initialDraft,\r\n  setDraft: (note) => set(() => ({ draft: note })),\r\n  clearDraft: () => set(() => ({ draft: initialDraft })),\r\n}));\r\n"],"names":[],"mappings":";;;;AAAA;;AASA,MAAM,eAA+B;IACnC,OAAO;IACP,SAAS;IACT,KAAK;AACP;AAEO,MAAM,oBAAoB,IAAA,kJAAM,IAAmB,CAAC,MAAQ,CAAC;QAClE,OAAO;QACP,UAAU,CAAC,OAAS,IAAI,IAAM,CAAC;oBAAE,OAAO;gBAAK,CAAC;QAC9C,YAAY,IAAM,IAAI,IAAM,CAAC;oBAAE,OAAO;gBAAa,CAAC;IACtD,CAAC","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/components/NoteForm/NoteForm.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actions\": \"NoteForm-module__XA_SlW__actions\",\n  \"cancelButton\": \"NoteForm-module__XA_SlW__cancelButton\",\n  \"error\": \"NoteForm-module__XA_SlW__error\",\n  \"form\": \"NoteForm-module__XA_SlW__form\",\n  \"formGroup\": \"NoteForm-module__XA_SlW__formGroup\",\n  \"input\": \"NoteForm-module__XA_SlW__input\",\n  \"select\": \"NoteForm-module__XA_SlW__select\",\n  \"submitButton\": \"NoteForm-module__XA_SlW__submitButton\",\n  \"textarea\": \"NoteForm-module__XA_SlW__textarea\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///C:/GoIT/Projects/dz/next/next-module-3-4/components/NoteForm/NoteForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createNote, type NewNotePayload } from \"@/lib/api\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useNoteDraftStore } from \"@/lib/stores/noteStore\";\r\nimport type { NoteTag, Note } from \"@/types/note\";\r\nimport css from \"./NoteForm.module.css\";\r\n\r\ntype Props1 = {\r\n  tags: NoteTag[];\r\n};\r\n\r\nconst NoteForm = ({ tags }: Props1) => {\r\n  const router = useRouter();\r\n  const { draft, setDraft, clearDraft } = useNoteDraftStore();\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<\r\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\r\n    >\r\n  ) => {\r\n    setDraft({\r\n      ...draft,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const { mutate } = useMutation({\r\n    mutationFn: createNote,\r\n    onSuccess: () => {\r\n      clearDraft();\r\n      router.push(\"/notes/filter/all\");\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (formData: FormData) => {\r\n    const values = {\r\n      title: formData.get(\"title\") as string,\r\n      content: formData.get(\"content\") as string,\r\n      tag: formData.get(\"tag\") as NoteTag,\r\n    } satisfies NewNotePayload;\r\n\r\n    mutate(values);\r\n  };\r\n\r\n  const handleCancel = () => router.push(\"/notes/filter/all\");\r\n\r\n  return (\r\n    <form\r\n      className={css.form}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(new FormData(e.currentTarget));\r\n      }}\r\n    >\r\n      <label className={css.label}>\r\n        Title\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          defaultValue={draft?.title}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={css.label}>\r\n        Content\r\n        <textarea\r\n          name=\"content\"\r\n          defaultValue={draft?.content}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n      </label>\r\n\r\n      <label className={css.label}>\r\n        Tags\r\n        <select name=\"tag\" defaultValue={draft?.tag} onChange={handleChange}>\r\n          {tags.map((tag) => (\r\n            <option key={tag} value={tag}>\r\n              {tag}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      <div className={css.actions}>\r\n        <button type=\"submit\">Create</button>\r\n        <button type=\"button\" onClick={handleCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NoteForm;\r\n// import {\r\n//   fetchNotes,\r\n//   createNote,\r\n//   NewNotePayload,\r\n//   fetchNoteById,\r\n// } from \"@/lib/api\";\r\n// import { useMutation } from \"@tanstack/react-query\";\r\n// import { useRouter } from \"next/navigation\";\r\n\r\n// import { useNoteDraftStore } from \"@/lib/stores/noteStore\";\r\n// import { NoteTag } from \"@/types/note\";\r\n// import css from \"./NoteForm.module.css\";\r\n\r\n// type Props1 = {\r\n//   tags: NoteTag[];\r\n// };\r\n\r\n// const NoteForm = ({ tags }: Props1) => {\r\n//   const router = useRouter();\r\n\r\n//   const { draft, setDraft, clearDraft } = useNoteDraftStore();\r\n//   const handleChange = (\r\n//     event: React.ChangeEvent<\r\n//       HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\r\n//     >\r\n//   ) => {\r\n//     // 4. Коли користувач змінює будь-яке поле форми — оновлюємо стан\r\n//     setDraft({\r\n//       ...draft,\r\n//       [event.target.name]: event.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const { mutate } = useMutation({\r\n//     mutationFn: createNote,\r\n//     // 5. При успішному створенні нотатки очищуємо чернетку\r\n//     onSuccess: () => {\r\n//       clearDraft();\r\n//       router.push(\"/notes/filter/all\");\r\n//     },\r\n//   });\r\n\r\n//   const handleSubmit = (formData: FormData) => {\r\n//     const values = {\r\n//       title: formData.get(\"title\") as string,\r\n//       content: formData.get(\"content\") as string,\r\n//       tag: formData.get(\"tag\") as string,\r\n//     } satisfies NewNotePayload;\r\n\r\n//     mutate(values);\r\n//   };\r\n//   const handleCancel = () => router.push(\"/notes/filter/all\");\r\n//   return (\r\n//     <form className={css.form} action={handleSubmit}>\r\n//       <label className={css.label}>\r\n//         Title\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"title\"\r\n//           defaultValue={draft?.title}\r\n//           onChange={handleChange}\r\n//         />\r\n//       </label>\r\n\r\n//       <label className={css.label}>\r\n//         Content\r\n//         <textarea\r\n//           name=\"content\"\r\n//           defaultValue={draft?.content}\r\n//           onChange={handleChange}\r\n//         ></textarea>\r\n//       </label>\r\n\r\n//       <label className={css.label}>\r\n//         Category\r\n//         <select name=\"tag\" defaultValue={draft?.tag} onChange={handleChange}>\r\n//           {tags.map((tag) => (\r\n//             <option key={tag.id} value={tag.id}>\r\n//               {tag.title}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </label>\r\n\r\n//       <div className={css.actions}>\r\n//         <button type=\"submit\">Create</button>\r\n//         <button type=\"button\" onClick={handleCancel}>\r\n//           Cancel\r\n//         </button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default NoteForm;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///C:/GoIT/Projects/dz/next/next-module-3-4/app/notes/action/create/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport css from \"./CreateNote.module.css\";\r\nimport NoteForm from \"@/components/NoteForm/NoteForm\";\r\nimport { tags } from \"@/constans/tags\";\r\n// import { NoteTag } from \"@/types/note\";\r\n// const tags: NoteTag[] = [\"Todo\", \"Work\", \"Personal\", \"Meeting\", \"Shopping\"];\r\nconst CreateNote = () => {\r\n  return (\r\n    <main className={css.main}>\r\n      <div className={css.container}>\r\n        <h1 className={css.title}>Create note</h1>\r\n        <NoteForm tags={tags} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default CreateNote;\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAKA,0CAA0C;AAC1C,+EAA+E;AAC/E,MAAM,aAAa;IACjB,qBACE,8OAAC;QAAK,WAAW,qKAAG,CAAC,IAAI;kBACvB,cAAA,8OAAC;YAAI,WAAW,qKAAG,CAAC,SAAS;;8BAC3B,8OAAC;oBAAG,WAAW,qKAAG,CAAC,KAAK;8BAAE;;;;;;8BAC1B,8OAAC,8IAAQ;oBAAC,MAAM,wHAAI;;;;;;;;;;;;;;;;;AAI5B;uCAEe","debugId":null}}]
}