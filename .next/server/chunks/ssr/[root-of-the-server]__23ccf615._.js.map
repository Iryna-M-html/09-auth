{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/GoIT/Projects/dz/next/next-module-3-4/lib/api.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport type { Note, NoteTag } from \"../types/note\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: \"https://notehub-public.goit.study/api\",\r\n});\r\n\r\napiClient.interceptors.request.use((config) => {\r\n  const token = process.env.NEXT_PUBLIC_NOTEHUB_TOKEN;\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport interface FetchNotesResponse {\r\n  notes: Note[];\r\n\r\n  totalPages: number;\r\n}\r\n\r\ninterface FetchNotesParams {\r\n  page?: number;\r\n  search?: string;\r\n  perPage?: number;\r\n}\r\n\r\nexport interface NewNotePayload {\r\n  title: string;\r\n  content: string;\r\n  tag: NoteTag;\r\n}\r\nexport async function fetchNotes(\r\n  page = 1,\r\n  perPage = 12,\r\n  search = \"\",\r\n  tag?: NoteTag\r\n): Promise<FetchNotesResponse> {\r\n  const response = await apiClient.get<FetchNotesResponse>(\"/notes\", {\r\n    params: { page, perPage, search, tag },\r\n  });\r\n  return response.data;\r\n}\r\n\r\nexport const createNote = async (noteData: NewNotePayload): Promise<Note> => {\r\n  const response = await apiClient.post<Note>(\"/notes\", noteData);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteNote = async (noteId: string): Promise<Note> => {\r\n  if (!noteId) {\r\n    throw new Error(\"Note ID is required for deletion\");\r\n  }\r\n  const response = await apiClient.delete<Note>(`/notes/${noteId}`);\r\n  return response.data;\r\n};\r\nexport const fetchNoteById = async (id: string): Promise<Note> => {\r\n  if (!id) {\r\n    throw new Error(\"Note ID is required\");\r\n  }\r\n  const response = await apiClient.get<Note>(`/notes/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getSingleNote = fetchNoteById;\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AAGA,MAAM,YAAY,gJAAK,CAAC,MAAM,CAAC;IAC7B,SAAS;AACX;AAEA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAClC,MAAM;IACN,wCAAW;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT;AAmBO,eAAe,WACpB,OAAO,CAAC,EACR,UAAU,EAAE,EACZ,SAAS,EAAE,EACX,GAAa;IAEb,MAAM,WAAW,MAAM,UAAU,GAAG,CAAqB,UAAU;QACjE,QAAQ;YAAE;YAAM;YAAS;YAAQ;QAAI;IACvC;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,UAAU,IAAI,CAAO,UAAU;IACtD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO;IAC/B,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,WAAW,MAAM,UAAU,MAAM,CAAO,CAAC,OAAO,EAAE,QAAQ;IAChE,OAAO,SAAS,IAAI;AACtB;AACO,MAAM,gBAAgB,OAAO;IAClC,IAAI,CAAC,IAAI;QACP,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAO,CAAC,OAAO,EAAE,IAAI;IACzD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,gBAAgB","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/components/NoteForm/NoteForm.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actions\": \"NoteForm-module__XA_SlW__actions\",\n  \"cancelButton\": \"NoteForm-module__XA_SlW__cancelButton\",\n  \"error\": \"NoteForm-module__XA_SlW__error\",\n  \"form\": \"NoteForm-module__XA_SlW__form\",\n  \"formGroup\": \"NoteForm-module__XA_SlW__formGroup\",\n  \"input\": \"NoteForm-module__XA_SlW__input\",\n  \"select\": \"NoteForm-module__XA_SlW__select\",\n  \"submitButton\": \"NoteForm-module__XA_SlW__submitButton\",\n  \"textarea\": \"NoteForm-module__XA_SlW__textarea\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///C:/GoIT/Projects/dz/next/next-module-3-4/components/NoteForm/NoteForm.tsx"],"sourcesContent":["import {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage as FormikErrorMessage,\r\n} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport css from \"./NoteForm.module.css\";\r\nimport type { Note, NoteTag } from \"../../types/note\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { createNote, type NewNotePayload } from \"@/lib/api\";\r\n\r\nconst validationSchema = Yup.object({\r\n  title: Yup.string()\r\n    .min(3, \"Title must be at least 3 characters\")\r\n    .max(50, \"Title must be at most 50 characters\")\r\n    .required(\"Title is required\"),\r\n  content: Yup.string().max(500, \"Content must be at most 500 characters\"),\r\n  tag: Yup.mixed<NoteTag>()\r\n    .oneOf(\r\n      [\"Todo\", \"Work\", \"Personal\", \"Meeting\", \"Shopping\"],\r\n      \"Invalid tag value\"\r\n    )\r\n    .required(\"Tag is required\"),\r\n});\r\n\r\nconst initialValues: NewNotePayload = {\r\n  title: \"\",\r\n  content: \"\",\r\n  tag: \"Todo\",\r\n};\r\n\r\ninterface NoteFormProps {\r\n  onCancel: () => void;\r\n  onCreated?: (note: Note) => void;\r\n}\r\n\r\nconst NoteForm = ({ onCancel, onCreated }: NoteFormProps) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const createMutation = useMutation({\r\n    mutationFn: createNote,\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: [\"notes\"] });\r\n      onCancel();\r\n\r\n      onCreated?.(data);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, actions) => {\r\n        createMutation.mutate(values);\r\n        actions.resetForm();\r\n      }}\r\n    >\r\n      {({ isValid }) => (\r\n        <Form className={css.form}>\r\n          <div className={css.formGroup}>\r\n            <label htmlFor=\"title\">Title</label>\r\n            <Field id=\"title\" type=\"text\" name=\"title\" className={css.input} />\r\n            <FormikErrorMessage\r\n              name=\"title\"\r\n              component=\"span\"\r\n              className={css.error}\r\n            />\r\n          </div>\r\n\r\n          <div className={css.formGroup}>\r\n            <label htmlFor=\"content\">Content</label>\r\n            <Field\r\n              id=\"content\"\r\n              as=\"textarea\"\r\n              name=\"content\"\r\n              rows={8}\r\n              className={css.textarea}\r\n            />\r\n            <FormikErrorMessage\r\n              name=\"content\"\r\n              component=\"span\"\r\n              className={css.error}\r\n            />\r\n          </div>\r\n\r\n          <div className={css.formGroup}>\r\n            <label htmlFor=\"tag\">Tag</label>\r\n            <Field id=\"tag\" as=\"select\" name=\"tag\" className={css.select}>\r\n              <option value=\"Todo\">Todo</option>\r\n              <option value=\"Work\">Work</option>\r\n              <option value=\"Personal\">Personal</option>\r\n              <option value=\"Meeting\">Meeting</option>\r\n              <option value=\"Shopping\">Shopping</option>\r\n            </Field>\r\n            <FormikErrorMessage\r\n              name=\"tag\"\r\n              component=\"span\"\r\n              className={css.error}\r\n            />\r\n          </div>\r\n\r\n          <div className={css.actions}>\r\n            <button\r\n              type=\"button\"\r\n              className={css.cancelButton}\r\n              onClick={onCancel}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className={css.submitButton}\r\n              disabled={!isValid || createMutation.isPending}\r\n            >\r\n              {createMutation.isPending ? \"Creating...\" : \"Create note\"}\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default NoteForm;\r\n"],"names":[],"mappings":";;;;;AAAA;AAMA;AACA;AAEA;AAAA;AACA;;;;;;;AAEA,MAAM,mBAAmB,6IAAU,CAAC;IAClC,OAAO,6IAAU,GACd,GAAG,CAAC,GAAG,uCACP,GAAG,CAAC,IAAI,uCACR,QAAQ,CAAC;IACZ,SAAS,6IAAU,GAAG,GAAG,CAAC,KAAK;IAC/B,KAAK,4IAAS,GACX,KAAK,CACJ;QAAC;QAAQ;QAAQ;QAAY;QAAW;KAAW,EACnD,qBAED,QAAQ,CAAC;AACd;AAEA,MAAM,gBAAgC;IACpC,OAAO;IACP,SAAS;IACT,KAAK;AACP;AAOA,MAAM,WAAW,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAiB;IACtD,MAAM,cAAc,IAAA,wMAAc;IAElC,MAAM,iBAAiB,IAAA,6LAAW,EAAC;QACjC,YAAY,wHAAU;QACtB,WAAW,CAAC;YACV,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAQ;YAAC;YACpD;YAEA,YAAY;QACd;IACF;IAEA,qBACE,8OAAC,yJAAM;QACL,eAAe;QACf,kBAAkB;QAClB,UAAU,CAAC,QAAQ;YACjB,eAAe,MAAM,CAAC;YACtB,QAAQ,SAAS;QACnB;kBAEC,CAAC,EAAE,OAAO,EAAE,iBACX,8OAAC,uJAAI;gBAAC,WAAW,yJAAG,CAAC,IAAI;;kCACvB,8OAAC;wBAAI,WAAW,yJAAG,CAAC,SAAS;;0CAC3B,8OAAC;gCAAM,SAAQ;0CAAQ;;;;;;0CACvB,8OAAC,wJAAK;gCAAC,IAAG;gCAAQ,MAAK;gCAAO,MAAK;gCAAQ,WAAW,yJAAG,CAAC,KAAK;;;;;;0CAC/D,8OAAC,+JAAkB;gCACjB,MAAK;gCACL,WAAU;gCACV,WAAW,yJAAG,CAAC,KAAK;;;;;;;;;;;;kCAIxB,8OAAC;wBAAI,WAAW,yJAAG,CAAC,SAAS;;0CAC3B,8OAAC;gCAAM,SAAQ;0CAAU;;;;;;0CACzB,8OAAC,wJAAK;gCACJ,IAAG;gCACH,IAAG;gCACH,MAAK;gCACL,MAAM;gCACN,WAAW,yJAAG,CAAC,QAAQ;;;;;;0CAEzB,8OAAC,+JAAkB;gCACjB,MAAK;gCACL,WAAU;gCACV,WAAW,yJAAG,CAAC,KAAK;;;;;;;;;;;;kCAIxB,8OAAC;wBAAI,WAAW,yJAAG,CAAC,SAAS;;0CAC3B,8OAAC;gCAAM,SAAQ;0CAAM;;;;;;0CACrB,8OAAC,wJAAK;gCAAC,IAAG;gCAAM,IAAG;gCAAS,MAAK;gCAAM,WAAW,yJAAG,CAAC,MAAM;;kDAC1D,8OAAC;wCAAO,OAAM;kDAAO;;;;;;kDACrB,8OAAC;wCAAO,OAAM;kDAAO;;;;;;kDACrB,8OAAC;wCAAO,OAAM;kDAAW;;;;;;kDACzB,8OAAC;wCAAO,OAAM;kDAAU;;;;;;kDACxB,8OAAC;wCAAO,OAAM;kDAAW;;;;;;;;;;;;0CAE3B,8OAAC,+JAAkB;gCACjB,MAAK;gCACL,WAAU;gCACV,WAAW,yJAAG,CAAC,KAAK;;;;;;;;;;;;kCAIxB,8OAAC;wBAAI,WAAW,yJAAG,CAAC,OAAO;;0CACzB,8OAAC;gCACC,MAAK;gCACL,WAAW,yJAAG,CAAC,YAAY;gCAC3B,SAAS;0CACV;;;;;;0CAGD,8OAAC;gCACC,MAAK;gCACL,WAAW,yJAAG,CAAC,YAAY;gCAC3B,UAAU,CAAC,WAAW,eAAe,SAAS;0CAE7C,eAAe,SAAS,GAAG,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;AAO1D;uCAEe","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///C:/GoIT/Projects/dz/next/next-module-3-4/app/notes/action/create/page.tsx"],"sourcesContent":["import { fetchNotes } from \"@/lib/api\";\r\nimport NoteForm from \"@/components/NoteForm/NoteForm\";\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage as FormikErrorMessage,\r\n} from \"formik\";\r\n\r\nconst CreateNote = async () => {\r\n  const categories = await fetchNotes();\r\n\r\n  return (\r\n    <>\r\n      <NoteForm\r\n        onCancel={() => {\r\n          //   console.log(\"Canceled\");\r\n        }}\r\n        onCreated={(data) => {\r\n          //   console.log(\"Created note:\", note);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateNote;\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAQA,MAAM,aAAa;IACjB,MAAM,aAAa,MAAM,IAAA,wHAAU;IAEnC,qBACE;kBACE,cAAA,8OAAC,8IAAQ;YACP,UAAU;YACR,6BAA6B;YAC/B;YACA,WAAW,CAAC;YACV,wCAAwC;YAC1C;;;;;;;AAIR;uCAEe","debugId":null}}]
}