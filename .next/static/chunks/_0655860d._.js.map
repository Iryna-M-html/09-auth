{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/notes/action/create/CreateNote.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"container\": \"CreateNote-module__aVly8a__container\",\n  \"main\": \"CreateNote-module__aVly8a__main\",\n  \"title\": \"CreateNote-module__aVly8a__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/components/NoteForm/NoteForm.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actions\": \"NoteForm-module__XA_SlW__actions\",\n  \"cancelButton\": \"NoteForm-module__XA_SlW__cancelButton\",\n  \"error\": \"NoteForm-module__XA_SlW__error\",\n  \"form\": \"NoteForm-module__XA_SlW__form\",\n  \"formGroup\": \"NoteForm-module__XA_SlW__formGroup\",\n  \"input\": \"NoteForm-module__XA_SlW__input\",\n  \"select\": \"NoteForm-module__XA_SlW__select\",\n  \"submitButton\": \"NoteForm-module__XA_SlW__submitButton\",\n  \"textarea\": \"NoteForm-module__XA_SlW__textarea\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///C:/GoIT/Projects/dz/next/next-module-3-4/lib/api.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport type { Note, NoteTag } from \"../types/note\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: \"https://notehub-public.goit.study/api\",\r\n});\r\n\r\napiClient.interceptors.request.use((config) => {\r\n  const token = process.env.NEXT_PUBLIC_NOTEHUB_TOKEN;\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport interface FetchNotesResponse {\r\n  notes: Note[];\r\n\r\n  totalPages: number;\r\n}\r\n\r\ninterface FetchNotesParams {\r\n  page?: number;\r\n  search?: string;\r\n  perPage?: number;\r\n}\r\n\r\nexport interface NewNotePayload {\r\n  title: string;\r\n  content: string;\r\n  tag: NoteTag;\r\n}\r\nexport async function fetchNotes(\r\n  page = 1,\r\n  perPage = 12,\r\n  search = \"\",\r\n  tag?: NoteTag\r\n): Promise<FetchNotesResponse> {\r\n  const response = await apiClient.get<FetchNotesResponse>(\"/notes\", {\r\n    params: { page, perPage, search, tag },\r\n  });\r\n  return response.data;\r\n}\r\n\r\nexport const createNote = async (noteData: NewNotePayload): Promise<Note> => {\r\n  const response = await apiClient.post<Note>(\"/notes\", noteData);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteNote = async (noteId: string): Promise<Note> => {\r\n  if (!noteId) {\r\n    throw new Error(\"Note ID is required for deletion\");\r\n  }\r\n  const response = await apiClient.delete<Note>(`/notes/${noteId}`);\r\n  return response.data;\r\n};\r\nexport const fetchNoteById = async (id: string): Promise<Note> => {\r\n  if (!id) {\r\n    throw new Error(\"Note ID is required\");\r\n  }\r\n  const response = await apiClient.get<Note>(`/notes/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getSingleNote = fetchNoteById;\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAQgB;AARhB;;AAGA,MAAM,YAAY,mJAAK,CAAC,MAAM,CAAC;IAC7B,SAAS;AACX;AAEA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAClC,MAAM;IACN,wCAAW;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,AAAC,UAAe,OAAN;IAC3C;IACA,OAAO;AACT;AAmBO,eAAe;QACpB,OAAA,iEAAO,GACP,UAAA,iEAAU,IACV,SAAA,iEAAS,IACT;IAEA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAqB,UAAU;QACjE,QAAQ;YAAE;YAAM;YAAS;YAAQ;QAAI;IACvC;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,UAAU,IAAI,CAAO,UAAU;IACtD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO;IAC/B,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,WAAW,MAAM,UAAU,MAAM,CAAO,AAAC,UAAgB,OAAP;IACxD,OAAO,SAAS,IAAI;AACtB;AACO,MAAM,gBAAgB,OAAO;IAClC,IAAI,CAAC,IAAI;QACP,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAO,AAAC,UAAY,OAAH;IACrD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,gBAAgB","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///C:/GoIT/Projects/dz/next/next-module-3-4/components/NoteForm/NoteForm.tsx"],"sourcesContent":["import {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage as FormikErrorMessage,\r\n} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport css from \"./NoteForm.module.css\";\r\nimport type { Note, NoteTag } from \"../../types/note\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { createNote, type NewNotePayload } from \"@/lib/api\";\r\n\r\nconst validationSchema = Yup.object({\r\n  title: Yup.string()\r\n    .min(3, \"Title must be at least 3 characters\")\r\n    .max(50, \"Title must be at most 50 characters\")\r\n    .required(\"Title is required\"),\r\n  content: Yup.string().max(500, \"Content must be at most 500 characters\"),\r\n  tag: Yup.mixed<NoteTag>()\r\n    .oneOf(\r\n      [\"Todo\", \"Work\", \"Personal\", \"Meeting\", \"Shopping\"],\r\n      \"Invalid tag value\"\r\n    )\r\n    .required(\"Tag is required\"),\r\n});\r\n\r\nconst initialValues: NewNotePayload = {\r\n  title: \"\",\r\n  content: \"\",\r\n  tag: \"Todo\",\r\n};\r\n\r\ninterface NoteFormProps {\r\n  onCancel: () => void;\r\n  onCreated?: (note: Note) => void;\r\n}\r\n\r\nconst NoteForm = ({ onCancel, onCreated }: NoteFormProps) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const createMutation = useMutation({\r\n    mutationFn: createNote,\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries({ queryKey: [\"notes\"] });\r\n      onCancel();\r\n\r\n      onCreated?.(data);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, actions) => {\r\n        createMutation.mutate(values);\r\n        actions.resetForm();\r\n      }}\r\n    >\r\n      {({ isValid }) => (\r\n        <Form className={css.form}>\r\n          <div className={css.formGroup}>\r\n            <label htmlFor=\"title\">Title</label>\r\n            <Field id=\"title\" type=\"text\" name=\"title\" className={css.input} />\r\n            <FormikErrorMessage\r\n              name=\"title\"\r\n              component=\"span\"\r\n              className={css.error}\r\n            />\r\n          </div>\r\n\r\n          <div className={css.formGroup}>\r\n            <label htmlFor=\"content\">Content</label>\r\n            <Field\r\n              id=\"content\"\r\n              as=\"textarea\"\r\n              name=\"content\"\r\n              rows={8}\r\n              className={css.textarea}\r\n            />\r\n            <FormikErrorMessage\r\n              name=\"content\"\r\n              component=\"span\"\r\n              className={css.error}\r\n            />\r\n          </div>\r\n\r\n          <div className={css.formGroup}>\r\n            <label htmlFor=\"tag\">Tag</label>\r\n            <Field id=\"tag\" as=\"select\" name=\"tag\" className={css.select}>\r\n              <option value=\"Todo\">Todo</option>\r\n              <option value=\"Work\">Work</option>\r\n              <option value=\"Personal\">Personal</option>\r\n              <option value=\"Meeting\">Meeting</option>\r\n              <option value=\"Shopping\">Shopping</option>\r\n            </Field>\r\n            <FormikErrorMessage\r\n              name=\"tag\"\r\n              component=\"span\"\r\n              className={css.error}\r\n            />\r\n          </div>\r\n\r\n          <div className={css.actions}>\r\n            <button\r\n              type=\"button\"\r\n              className={css.cancelButton}\r\n              onClick={onCancel}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className={css.submitButton}\r\n              disabled={!isValid || createMutation.isPending}\r\n            >\r\n              {createMutation.isPending ? \"Creating...\" : \"Create note\"}\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default NoteForm;\r\n"],"names":[],"mappings":";;;;;AAAA;AAMA;AACA;AAEA;AAAA;AACA;;;;;;;;AAEA,MAAM,mBAAmB,gJAAU,CAAC;IAClC,OAAO,gJAAU,GACd,GAAG,CAAC,GAAG,uCACP,GAAG,CAAC,IAAI,uCACR,QAAQ,CAAC;IACZ,SAAS,gJAAU,GAAG,GAAG,CAAC,KAAK;IAC/B,KAAK,+IAAS,GACX,KAAK,CACJ;QAAC;QAAQ;QAAQ;QAAY;QAAW;KAAW,EACnD,qBAED,QAAQ,CAAC;AACd;AAEA,MAAM,gBAAgC;IACpC,OAAO;IACP,SAAS;IACT,KAAK;AACP;AAOA,MAAM,WAAW;QAAC,EAAE,QAAQ,EAAE,SAAS,EAAiB;;IACtD,MAAM,cAAc,IAAA,2MAAc;IAElC,MAAM,iBAAiB,IAAA,gMAAW,EAAC;QACjC,YAAY,2HAAU;QACtB,SAAS;oDAAE,CAAC;gBACV,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAQ;gBAAC;gBACpD;gBAEA,sBAAA,gCAAA,UAAY;YACd;;IACF;IAEA,qBACE,6LAAC,4JAAM;QACL,eAAe;QACf,kBAAkB;QAClB,UAAU,CAAC,QAAQ;YACjB,eAAe,MAAM,CAAC;YACtB,QAAQ,SAAS;QACnB;kBAEC;gBAAC,EAAE,OAAO,EAAE;iCACX,6LAAC,0JAAI;gBAAC,WAAW,4JAAG,CAAC,IAAI;;kCACvB,6LAAC;wBAAI,WAAW,4JAAG,CAAC,SAAS;;0CAC3B,6LAAC;gCAAM,SAAQ;0CAAQ;;;;;;0CACvB,6LAAC,2JAAK;gCAAC,IAAG;gCAAQ,MAAK;gCAAO,MAAK;gCAAQ,WAAW,4JAAG,CAAC,KAAK;;;;;;0CAC/D,6LAAC,kKAAkB;gCACjB,MAAK;gCACL,WAAU;gCACV,WAAW,4JAAG,CAAC,KAAK;;;;;;;;;;;;kCAIxB,6LAAC;wBAAI,WAAW,4JAAG,CAAC,SAAS;;0CAC3B,6LAAC;gCAAM,SAAQ;0CAAU;;;;;;0CACzB,6LAAC,2JAAK;gCACJ,IAAG;gCACH,IAAG;gCACH,MAAK;gCACL,MAAM;gCACN,WAAW,4JAAG,CAAC,QAAQ;;;;;;0CAEzB,6LAAC,kKAAkB;gCACjB,MAAK;gCACL,WAAU;gCACV,WAAW,4JAAG,CAAC,KAAK;;;;;;;;;;;;kCAIxB,6LAAC;wBAAI,WAAW,4JAAG,CAAC,SAAS;;0CAC3B,6LAAC;gCAAM,SAAQ;0CAAM;;;;;;0CACrB,6LAAC,2JAAK;gCAAC,IAAG;gCAAM,IAAG;gCAAS,MAAK;gCAAM,WAAW,4JAAG,CAAC,MAAM;;kDAC1D,6LAAC;wCAAO,OAAM;kDAAO;;;;;;kDACrB,6LAAC;wCAAO,OAAM;kDAAO;;;;;;kDACrB,6LAAC;wCAAO,OAAM;kDAAW;;;;;;kDACzB,6LAAC;wCAAO,OAAM;kDAAU;;;;;;kDACxB,6LAAC;wCAAO,OAAM;kDAAW;;;;;;;;;;;;0CAE3B,6LAAC,kKAAkB;gCACjB,MAAK;gCACL,WAAU;gCACV,WAAW,4JAAG,CAAC,KAAK;;;;;;;;;;;;kCAIxB,6LAAC;wBAAI,WAAW,4JAAG,CAAC,OAAO;;0CACzB,6LAAC;gCACC,MAAK;gCACL,WAAW,4JAAG,CAAC,YAAY;gCAC3B,SAAS;0CACV;;;;;;0CAGD,6LAAC;gCACC,MAAK;gCACL,WAAW,4JAAG,CAAC,YAAY;gCAC3B,UAAU,CAAC,WAAW,eAAe,SAAS;0CAE7C,eAAe,SAAS,GAAG,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;AAO1D;GAtFM;;QACgB,2MAAc;QAEX,gMAAW;;;KAH9B;uCAwFS","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///C:/GoIT/Projects/dz/next/next-module-3-4/app/notes/action/create/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\n// import { useParams } from \"next/navigation\";\r\nimport css from \"./CreateNote.module.css\";\r\nimport NoteForm from \"@/components/NoteForm/NoteForm\";\r\n// import { useQuery } from \"@tanstack/react-query\";\r\n// import { fetchNoteById } from \"@/lib/api\";\r\n// import { useRouter } from \"next/navigation\";\r\n\r\nconst CreateNote = () => {\r\n  //   const router = useRouter();\r\n  //   const close = () => router.back();\r\n\r\n  //   const { id } = useParams<{ id: string }>();\r\n\r\n  //   const {\r\n  //     data: note,\r\n  //     isLoading,\r\n  //     error,\r\n  //   } = useQuery({\r\n  //     queryKey: [\"noteHubKeyById\", id],\r\n  //     queryFn: () => fetchNoteById(id),\r\n  //     refetchOnMount: false,\r\n  //   });\r\n\r\n  //   if (isLoading) {\r\n  //     return <p>Loading, please wait...</p>;\r\n  //   }\r\n\r\n  //   if (error || !note) {\r\n  //     throw error;\r\n  //   }\r\n\r\n  return (\r\n    <main className={css.main}>\r\n      <div className={css.container}>\r\n        <h1 className={css.title}>Create note</h1>\r\n        <NoteForm onCancel={() => {}} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default CreateNote;\r\n"],"names":[],"mappings":";;;;;AAEA,+CAA+C;AAC/C;AACA;AAJA;;;;AAKA,oDAAoD;AACpD,6CAA6C;AAC7C,+CAA+C;AAE/C,MAAM,aAAa;IACjB,gCAAgC;IAChC,uCAAuC;IAEvC,gDAAgD;IAEhD,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,wCAAwC;IACxC,wCAAwC;IACxC,6BAA6B;IAC7B,QAAQ;IAER,qBAAqB;IACrB,6CAA6C;IAC7C,MAAM;IAEN,0BAA0B;IAC1B,mBAAmB;IACnB,MAAM;IAEN,qBACE,6LAAC;QAAK,WAAW,wKAAG,CAAC,IAAI;kBACvB,cAAA,6LAAC;YAAI,WAAW,wKAAG,CAAC,SAAS;;8BAC3B,6LAAC;oBAAG,WAAW,wKAAG,CAAC,KAAK;8BAAE;;;;;;8BAC1B,6LAAC,iJAAQ;oBAAC,UAAU,KAAO;;;;;;;;;;;;;;;;;AAInC;KAhCM;uCAkCS","debugId":null}}]
}